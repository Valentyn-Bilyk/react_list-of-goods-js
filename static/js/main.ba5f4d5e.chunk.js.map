{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","GOOD_LEGTH","GOOD_NAME","App","useState","sortField","setSortField","isReverse","setIsReverse","sortedGoods","goods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAa,SACbC,EAAY,OAyBX,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,OAASD,EAAMC,OAC9B,KAAKb,EACH,OAAOW,EAAMG,cAAcF,GAC7B,QACE,OAAO,MAKXP,GACFI,EAAcM,UAGTN,EAMaO,CAAiBlB,EAAiBK,EAAWE,GAEjE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcH,IAE5BoB,QAAS,kBAAMhB,EAAaJ,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAcJ,IAE5BqB,QAAS,kBAAMhB,EAAaL,IAL9B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAA0B,IAAdd,IAEde,QAAS,kBAAMd,GAAcD,IAL/B,sBAUEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAa,IALjB,sBAaJ,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YChGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba5f4d5e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst GOOD_LEGTH = 'length';\nconst GOOD_NAME = 'name';\n\nfunction getPreparedGoods(goods, sortField, isReverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case GOOD_LEGTH:\n          return good1.length - good2.length;\n        case GOOD_NAME:\n          return good1.localeCompare(good2);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const sortedGoods = getPreparedGoods(goodsFromServer, sortField, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== GOOD_NAME,\n          })}\n          onClick={() => setSortField(GOOD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== GOOD_LEGTH,\n          })}\n          onClick={() => setSortField(GOOD_LEGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isReverse !== true,\n          })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}